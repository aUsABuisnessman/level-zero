on:
  push:
    branches: [ labels ]
  pull_request:
    branches: [ labels ]
  workflow_dispatch:

permissions: read-all

jobs:
  build-linux:
    if: github.repository_owner == 'oneapi-src'
    runs-on: [ubuntu-Xenial]
    steps:
      - uses: actions/checkout@v4
      - uses: hendrikmuhs/ccache-action@v1
      - name: Build Static Loader on Latest Ubuntu
        run: |
          mkdir build
          cd build
          cmake \
            -D CMAKE_C_COMPILER_LAUNCHER=ccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D CMAKE_BUILD_TYPE=Release \
            -D BUILD_L0_LOADER_TESTS=1 \
            -D BUILD_STATIC=1 \
            ..
          make -j$(nproc)
      - name: Build Dynamic Loader on Latest Ubuntu
        run: |
            cd ${{ github.workspace }}
            mkdir dynamic_build
            cd dynamic_build
            cmake \
              -D CMAKE_C_COMPILER_LAUNCHER=ccache \
              -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -D CMAKE_BUILD_TYPE=Release \
              -D BUILD_L0_LOADER_TESTS=1 \
              -D BUILD_STATIC= \
              ..
            make -j$(nproc)
      - env:
          ZEL_LIBRARY_PATH: '${{ github.workspace }}/dynamic_build/lib'
        working-directory: build
        run: ls $ZEL_LIBRARY_PATH;ZE_ENABLE_LOADER_DEBUG_TRACE=1 ctest -V

  build-windows:
    if: github.repository_owner == 'oneapi-src'
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build Loader on Latest Windows
        run: |
          mkdir build
          cd build
          cmake -D BUILD_L0_LOADER_TESTS=1 -D BUILD_STATIC=1 ..
          cmake --build . --config Release
      - env:
          ZE_ENABLE_LOADER_DEBUG_TRACE: '1'
          ZEL_LIBRARY_PATH: '${{ github.workspace }}/build/bin/Release'
        working-directory: build
        run: ctest -C Release -V
                    - name: Cache
  uses: actions/cache@v4.2.3
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
          
